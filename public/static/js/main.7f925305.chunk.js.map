{"version":3,"sources":["components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["queryClient","QueryClient","SearchBar","client","Search","Component","useQuery","fetch","then","res","json","isLoading","error","data","message","placeholder","value","callback","record","console","log","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAKMA,EAAc,IAAIC,cAElBC,E,4JACF,WACI,OACA,cAAC,sBAAD,CAAqBC,OAAQH,EAA7B,SACI,cAACI,EAAD,U,GAJYC,aASTH,IAEf,SAASE,IACP,MAAmCE,mBAAS,YAAY,kBACtDC,MAAM,mBAAmBC,MAAK,SAAAC,GAAG,OAC/BA,EAAIC,aAFAC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,KAM1B,OAAIF,EAAkB,aAElBC,EAAc,0BAA4BA,EAAME,QAGlD,8BACE,cAAC,IAAD,CACEC,YAAY,cACZC,MAAM,MACNH,KAAMA,EACNI,SAAU,SAACC,GAAD,OAAYC,QAAQC,IAAIF,QCvB3BG,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7f925305.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query'\nimport ReactSearchBox from \"react-search-box\";\n\n\nconst queryClient = new QueryClient()\n\nclass SearchBar extends Component {\n    render() {\n        return (\n        <QueryClientProvider client={queryClient}>\n            <Search />\n        </QueryClientProvider>\n        )\n    }\n}\nexport default SearchBar;\n\nfunction Search() {\n  const { isLoading, error, data } = useQuery('repoData', () =>\n    fetch('/api/v1/company').then(res =>\n      res.json()\n    )\n  )\n\n  if (isLoading) return 'Loading...'\n\n  if (error) return 'An error has occurred: ' + error.message\n\n  return (\n    <div>\n      <ReactSearchBox\n        placeholder=\"Placeholder\"\n        value=\"Doe\"\n        data={data}\n        callback={(record) => console.log(record)}\n      />\n    </div>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchBar/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}