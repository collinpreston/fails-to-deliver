{"version":3,"sources":["components/SearchBar.js","components/CompanyGraph.js","components/Home.js","components/logo.svg","components/NavLogo.js","components/About.js","components/Footer.js","components/Contact.js","components/API.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","handleOnSelect","item","onSelectCompany","handleOnClear","onClearSearch","state","data","this","fetchData","fetch","then","res","a","json","setState","catch","error","console","log","items","fuseOptions","keys","autoFocus","onSelect","onClear","resultStringKeyName","placeholder","styling","zIndex","React","Component","CompanyGraph","style","width","selectedCompanySymbol","selectedCompanyName","ResponsiveContainer","height","LineChart","selectedCompanyData","syncId","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","type","stroke","fill","AreaChart","Area","Brush","PureComponent","Home","graph","dataRetrievedDate","useState","companySymbol","setCompanySymbol","companyName","setCompanyName","companyData","setCompanyData","graphShown","setGraphShown","companyLastUpdatedOn","setCompanyLastUpdatedOn","resetHomePage","moment","format","title","description","canonical","meta","charset","name","keywords","className","onClick","symbol","companyId","url","newData","settlements","map","settlement_date","data_last_updated","fetchSettlementsForCompany","id","NavLogo","customClickEvent","to","src","Logo","alt","About","Accordion","Item","eventKey","Header","Body","href","Footer","Navbar","bg","variant","fixed","Container","Brand","Nav","Link","Contact","form","email","setEmail","message","setMessage","formSubmitted","setFormSubmitted","requestOptions","method","headers","body","JSON","stringify","inquiry","handleChange","e","target","value","Form","onSubmit","event","response","Group","controlId","Label","Control","onChange","as","rows","Button","API","NotFound","App","navigate","useNavigate","path","element","client","slot","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.662ac82d.chunk.js","sourcesContent":["import React from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\n\nclass SearchBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        }\n      }\n\n    componentDidMount(){\n      this.fetchData();\n    }\n\n    handleOnSelect = (item) =>{\n      this.props.onSelectCompany(item)\n    };\n\n    handleOnClear = () =>{\n      this.props.onClearSearch()\n    }\n  \n  \n    fetchData(){\n        const url = '/api/v1/company';\n        fetch(url)\n            .then(async(res) => {\n                const a = await res.json()\n                this.setState({data: a})\n                return a\n            })\n            .catch(error => console.log(error))\n    }\n  \n    render() {\n      return (\n        <ReactSearchAutocomplete\n            items={this.state.data}\n            fuseOptions={{ keys: [\"symbol\", \"name\"] }} // Search on both fields\n            autoFocus\n            onSelect={this.handleOnSelect}\n            onClear={this.handleOnClear}\n            resultStringKeyName=\"symbol\" // String to display in the results\n            placeholder={'Search by symbol or name'}\n            styling={{ zIndex: 2 }} // To display it on top of the search box below\n          />\n      );\n    }\n  }\n\nexport default SearchBar;\n","import React, { PureComponent } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Brush,\n  AreaChart,\n  Area,\n  ResponsiveContainer,\n} from 'recharts';\n\nexport default class CompanyGraph extends PureComponent {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%' }}>\n        <h4>{this.props.selectedCompanySymbol} - {this.props.selectedCompanyName}</h4>\n\n        <ResponsiveContainer width=\"100%\" height={200}>\n          <LineChart\n            width={500}\n            height={200}\n            data={this.props.selectedCompanyData}\n            syncId=\"anyId\"\n            margin={{\n              top: 10,\n              right: 30,\n              left: 0,\n              bottom: 0,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"settlement_date\" />\n            <YAxis />\n            <Tooltip />\n            <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n          </LineChart>\n        </ResponsiveContainer>\n\n        <ResponsiveContainer width=\"100%\" height={200}>\n          <AreaChart\n            width={500}\n            height={200}\n            data={this.props.selectedCompanyData}\n            syncId=\"anyId\"\n            margin={{\n              top: 10,\n              right: 30,\n              left: 0,\n              bottom: 0,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"settlement_date\" />\n            <YAxis />\n            <Tooltip />\n            <Area type=\"monotone\" dataKey=\"quantity\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n            <Brush />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport './Home.css';\nimport SearchBar from './SearchBar';\nimport CompanyGraph from './CompanyGraph';\nimport moment from 'moment';\nimport DocumentMeta from 'react-document-meta';\n\nconst Home = () => {\n\n  const meta = {\n    title: 'Home',\n    description: 'failsdata.com home page',\n    canonical: 'http://failsdata.com/',\n    meta: {\n      charset: 'utf-8',\n      name: {\n        keywords: 'stock,SEC,fails,FTD,GME'\n      }\n    }\n  };\n\n\n  const [companySymbol, setCompanySymbol] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [companyData, setCompanyData] = useState([]);\n  const [graphShown, setGraphShown] = useState(false);\n  const [companyLastUpdatedOn, setCompanyLastUpdatedOn] = useState(\"\");\n\n  function fetchSettlementsForCompany(companyId) {\n    const url = `/api/v1/company/${companyId}`;\n    fetch(url)\n      .then(async (res) => {\n        const a = await res.json()\n        let newData = a.settlements.map(item => {\n          return { ...item, settlement_date: moment(item.settlement_date).format('MMM DD, YYYY') }\n        });\n        setCompanyLastUpdatedOn(a.data_last_updated)\n        setCompanyData(newData)\n        return a\n      })\n      .catch(error => console.log(error))\n  }\n\n  function handleSearchSelection(item) {\n    setCompanySymbol(item.symbol);\n    console.log(item)\n    setCompanyName(item.name);\n    setGraphShown(true);\n    fetchSettlementsForCompany(item.id)\n  }\n\n  function resetHomePage() {\n    setGraphShown(false);\n  }\n\n  let graph, dataRetrievedDate;\n  if (graphShown) {\n    graph = <CompanyGraph selectedCompanyName={companyName} selectedCompanySymbol={companySymbol} selectedCompanyData={companyData}></CompanyGraph>\n    dataRetrievedDate = <p>{\"Data last updated on \" + moment(companyLastUpdatedOn).format('MMM DD, YYYY')}</p>\n  }\n\n  return (\n    <DocumentMeta {...meta}>\n      <div className=\"Home\">\n        <div className=\"Title\" onClick={resetHomePage}>Fails-to-Deliver Data</div>\n        <div className=\"SearchBar\">\n          <SearchBar onSelectCompany={handleSearchSelection} onClearSearch={resetHomePage} style={{ width: '50%' }} />\n        </div>\n        <br />\n        {graph}\n        {dataRetrievedDate}\n      </div>\n    </DocumentMeta>\n  );\n}\n\nexport default Home;","export default __webpack_public_path__ + \"static/media/logo.2414b4b8.svg\";","import React from \"react\";\nimport Logo from \"./logo.svg\";\nimport \"./NavLogo.css\"\n\nconst NavLogo = (props) => {\n    return (\n      <nav id=\"navbar\" onClick={props.customClickEvent}>\n        <div className=\"nav-wrapper\">\n          <a\n            to={\"/\"}\n            className=\"left brand-logo\"\n          >\n            <img src={Logo} alt=\"logo\" className=\"photo\" />\n          </a>\n        </div>\n      </nav>\n    );\n}\n\nexport default NavLogo;\n","import Accordion from 'react-bootstrap/Accordion'\nimport DocumentMeta from 'react-document-meta';\nimport './About.css'\nfunction About() {\n    const meta = {\n        title: 'About',\n        description: 'About failsdata.com and stock FTD frequently asked questions',\n        canonical: 'http://failsdata.com/about',\n        meta: {\n            charset: 'utf-8',\n            name: {\n                keywords: 'about,fails,stocks,SEC,deliver'\n            }\n        }\n    };\n\n    return (\n        <>\n            <DocumentMeta {...meta}>\n                <div>\n                    <div id=\"FAQ-title\">\n                        <h1>Frequently Asked Questions</h1>\n                        <p>Feel free to contact us below for any questions not answered here.</p>\n                    </div>\n                    <div id=\"accordian-tag\">\n                        <Accordion id=\"accordian\">\n                            <Accordion.Item eventKey=\"0\">\n                                <Accordion.Header>What does fails-to-deliver mean?</Accordion.Header>\n                                <Accordion.Body>\n                                    Failure to deliver (FTD) refers to a situation where one party in a trading contract\n                                    (whether it's shares, futures, options, or forward contracts) doesn't deliver on their obligation.\n                                    Such failures occur when a buyer (the party with a long position) doesn't have enough money to\n                                    take delivery and pay for the transaction at settlement. A failure can also occur when the seller \n                                    (the party with a short position) does not own all or any of the underlying assets required \n                                    at settlement, and so cannot make the delivery.- <a href=\"https://www.investopedia.com/terms/f/failuretodeliver.asp\">investopedia.com</a>\n                                </Accordion.Body>\n                            </Accordion.Item>\n                            <Accordion.Item eventKey=\"1\">\n                                <Accordion.Header>Where is this data from?</Accordion.Header>\n                                <Accordion.Body>\n                                    This data is publically available directly from the Securities and Exchange Commission (SEC) <a href=\"https://www.sec.gov/data/foiadocsfailsdatahtm\">here</a>.\n                                </Accordion.Body>\n                            </Accordion.Item>\n                            <Accordion.Item eventKey=\"2\">\n                                <Accordion.Header>How often is the data updated?</Accordion.Header>\n                                <Accordion.Body>\n                                    The SEC publishes new data bi-monthly.  The first half of a given month is available at the end of the month.\n                                    The second half of a given month is available at about the 15th of the next month.\n                                    Our servers check for new data nightly.\n                                </Accordion.Body>\n                            </Accordion.Item>\n                            <Accordion.Item eventKey=\"3\">\n                                <Accordion.Header>Why is there not more historical data?</Accordion.Header>\n                                <Accordion.Body>\n                                    Cost.  We only make money through donations (<a href=\"https://www.paypal.com/paypalme/collinhpreston\">PayPal</a>).  Each report from the SEC can contain\n                                    40k entries, which must be consumed and stored into our database.  Hosting and managing our\n                                    current infrastructure costs $12 a month.  Adding more historically data will double or tripple\n                                    that cost.\n                                </Accordion.Body>\n                            </Accordion.Item>\n                            <Accordion.Item eventKey=\"4\">\n                                <Accordion.Header>Why can't I find data for a symbol</Accordion.Header>\n                                <Accordion.Body>\n                                    Not all publically traded companies, funds, stocks, will have shares that\n                                    failed to be delivered prior to their settlement date.  If you don't see\n                                    the stock symbol you're looking for, that may be that case.\n                                </Accordion.Body>\n                            </Accordion.Item>\n                            <Accordion.Item eventKey=\"5\">\n                                <Accordion.Header>Do you offer an API?</Accordion.Header>\n                                <Accordion.Body>\n                                    Yes we do!  You can check out our <a href=\"/api\">API page</a>.\n                                </Accordion.Body>\n                            </Accordion.Item>\n                        </Accordion>\n                    </div>\n                </div>\n            </DocumentMeta>\n        </>\n    );\n}\nexport default About;","import { Navbar, Container, Nav} from 'react-bootstrap'\nimport './Footer.css'\nconst Footer = () => {\nreturn (\n<>\n  <Navbar bg=\"light\" variant=\"light\" fixed=\"bottom\" >\n    <Container>\n    <Navbar.Brand href=\"/\">Failsdata.com</Navbar.Brand>\n    <Nav className=\"me-auto\">\n      <Nav.Link href=\"/\">Home</Nav.Link>\n      <Nav.Link href=\"/about\">About</Nav.Link>\n      <Nav.Link href=\"/contact\">Contact</Nav.Link>\n      <Nav.Link href=\"/api\">API</Nav.Link>\n      <Nav.Link href=\"https://www.paypal.com/paypalme/collinhpreston\">Support</Nav.Link>\n    </Nav>\n    </Container>\n  </Navbar>\n</>\n)\n}\nexport default Footer;","import { useState } from 'react';\nimport './Contact.css'\nimport { Form, Button } from 'react-bootstrap'\nimport DocumentMeta from 'react-document-meta';\n\nfunction Contact() {\n    const meta = {\n        title: 'Contact',\n        description: 'Contact form failsdata.com',\n        canonical: 'http://failsdata.com/contact',\n        meta: {\n            charset: 'utf-8',\n            name: {\n                keywords: 'contact,stocks,fails,SEC,deliver'\n            }\n        }\n    };\n\n    const [email, setEmail] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [formSubmitted, setFormSubmitted] = useState(false);\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ inquiry: { message }, email: { email } })\n    };\n\n    function handleChange(e) {\n        switch (e.target.name) {\n            case \"message\":\n                setMessage(e.target.value);\n                return;\n            case \"email\":\n                setEmail(e.target.value);\n                return;\n        }\n    }\n\n    function handleSubmit(event) {\n        setFormSubmitted(true)\n\n        fetch('/api/v1/inquiry', requestOptions)\n            .then(response => response.json());\n        // TODO, send request to Ruby endpoint that will ultimately send the email\n    }\n\n    let form;\n    if (formSubmitted) {\n        form =\n            <div>\n                <p><b>Thanks for your inquiry, you will hear from us soon.</b></p>\n            </div>\n    } else {\n        form =\n            <div>\n                <p><b>Feel free to reach out with any questions or suggestions.</b></p>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control name=\"email\" type=\"email\" placeholder=\"name@example.com\" onChange={handleChange} />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Inquiry</Form.Label>\n                        <Form.Control name=\"message\" as=\"textarea\" rows={3} onChange={handleChange} />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n    }\n\n    return (\n        <DocumentMeta {...meta}>\n            <div id=\"form\">\n                <h1>Contact</h1>\n                {form}\n            </div>\n        </DocumentMeta>\n    )\n}\nexport default Contact\n","import Accordion from 'react-bootstrap/Accordion'\nimport JSONPretty from 'react-json-pretty';\nimport DocumentMeta from 'react-document-meta';\nimport './API.css'\n\nfunction API() {\n    const meta = {\n        title: 'API',\n        description: 'Stock Fails to deliver data API.',\n        canonical: 'http://failsdata.com/api',\n        meta: {\n            charset: 'utf-8',\n            name: {\n                keywords: 'API,fails,stocks,deliver,data'\n            }\n        }\n    };\n\n    const company_search_response = `{\n        \"id\": 1,\n        \"data_last_updated\": \"2021-12-20 17:37:47 -0500\",\n        \"settlements\": [\n            {\n                \"id\": 1,\n                \"settlement_date\": \"20211101\",\n                \"quantity\": 183855,\n                \"price\": \"3.05\",\n                \"created_at\": \"2021-12-20T22:37:47.702Z\",\n                \"updated_at\": \"2021-12-20T22:37:47.702Z\",\n                \"settlement_period_id\": 1,\n                \"company_id\": 1\n            },\n            {\n                \"id\": 5706,\n                \"settlement_date\": \"20211102\",\n                \"quantity\": 88351,\n                \"price\": \"2.7\",\n                \"created_at\": \"2021-12-20T22:40:19.951Z\",\n                \"updated_at\": \"2021-12-20T22:40:19.951Z\",\n                \"settlement_period_id\": 1,\n                \"company_id\": 1\n            },\n            {\n                \"id\": 17613,\n                \"settlement_date\": \"20211104\",\n                \"quantity\": 2444,\n                \"price\": \"2.37\",\n                \"created_at\": \"2021-12-20T22:43:55.109Z\",\n                \"updated_at\": \"2021-12-20T22:43:55.109Z\",\n                \"settlement_period_id\": 1,\n                \"company_id\": 1\n            },\n            {\n                \"id\": 23520,\n                \"settlement_date\": \"20211105\",\n                \"quantity\": 2932,\n                \"price\": \"2.3\",\n                \"created_at\": \"2021-12-20T22:45:26.164Z\",\n                \"updated_at\": \"2021-12-20T22:45:26.164Z\",\n                \"settlement_period_id\": 1,\n                \"company_id\": 1\n            },\n            {\n                \"id\": 29552,\n                \"settlement_date\": \"20211108\",\n                \"quantity\": 854,\n                \"price\": \"2.41\",\n                \"created_at\": \"2021-12-20T22:46:56.273Z\",\n                \"updated_at\": \"2021-12-20T22:46:56.273Z\",\n                \"settlement_period_id\": 1,\n                \"company_id\": 1\n            },\n            {\n                \"id\": 35475,\n                \"settlement_date\": \"20211109\",\n                \"quantity\": 758,\n                \"price\": \"2.28\",\n                \"created_at\": \"2021-12-20T22:48:31.526Z\",\n                \"updated_at\": \"2021-12-20T22:48:31.526Z\",\n                \"settlement_period_id\": 1,\n                \"company_id\": 1\n            },\n            {\n                \"id\": 41505,\n                \"settlement_date\": \"20211110\",\n                \"quantity\": 15092,\n                \"price\": \"2.19\",\n                \"created_at\": \"2021-12-20T22:50:16.731Z\",\n                \"updated_at\": \"2021-12-20T22:50:16.731Z\",\n                \"settlement_period_id\": 1,\n                \"company_id\": 1\n            },\n            {\n                \"id\": 47564,\n                \"settlement_date\": \"20211112\",\n                \"quantity\": 49856,\n                \"price\": \"2.23\",\n                \"created_at\": \"2021-12-20T22:52:14.358Z\",\n                \"updated_at\": \"2021-12-20T22:52:14.358Z\",\n                \"settlement_period_id\": 1,\n                \"company_id\": 1\n            }\n        ]\n    }`;\n\n    const company_list_response = `[\n        {\n            \"id\": 1,\n            \"symbol\": \"AGRI\",\n            \"name\": \"AGRIFORCE GROWING SYS LTD COM \"\n        },\n        {\n            \"id\": 2,\n            \"symbol\": \"VMAR\",\n            \"name\": \"VISION MARINE TECHNOLOGIES INC\"\n        },\n        {\n            \"id\": 3,\n            \"symbol\": \"DDAIF\",\n            \"name\": \"DAIMLER AG\"\n        },\n        {\n            \"id\": 4,\n            \"symbol\": \"DB\",\n            \"name\": \"DEUTSCHE BANK AG NAMEN AKT (DE\"\n        },\n        {\n            \"id\": 5,\n            \"symbol\": \"CSTM\",\n            \"name\": \"CONSTELLIUM SE CL A SHS USD (F\"\n        }]`\n\n    return (\n        <DocumentMeta {...meta}>\n            <div id=\"api-title\">\n                <h1>API</h1>\n                <br />\n                <Accordion id=\"api-endpoints\">\n                    <Accordion.Item eventKey=\"0\">\n                        <Accordion.Header>/api/v1/company/:id</Accordion.Header>\n                        <Accordion.Body>\n                            <p><b>Description:</b> Returns all of the failed delivery data for a single company.</p>\n                            <p><b>Parameters:</b> id - The Id of the company being searched.</p>\n                            <p><b>Returns:</b> </p>\n                            <JSONPretty id=\"json-pretty\" json={company_search_response}></JSONPretty>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"1\">\n                        <Accordion.Header>/api/v1/company</Accordion.Header>\n                        <Accordion.Body>\n                            <p><b>Description:</b> Returns all of the companies available</p>\n                            <p><b>Returns:</b> </p>\n                            <JSONPretty id=\"json-pretty\" json={company_list_response}></JSONPretty>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n            </div>\n        </DocumentMeta>\n    )\n}\nexport default API\n","function NotFound() {\n\n    return (\n        <div>\n            <p>404: We couldn't find the page you're looking for!</p>\n        </div>\n    );\n}\nexport default NotFound;","import React, { useLayoutEffect, useState } from 'react';\nimport './App.css';\nimport Home from './components/Home'\nimport NavLogo from './components/NavLogo';\nimport About from './components/About';\nimport Footer from './components/Footer'\nimport Contact from './components/Contact'\nimport API from './components/API'\nimport NotFound from './components/NotFound'\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { Adsense } from '@ctrl/react-adsense';\n\nconst App = () => {\n\n  const navigate = useNavigate();\n\n  function navigateHome() {\n    navigate('/');\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div id=\"container\">\n        <NavLogo customClickEvent={navigateHome}></NavLogo>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"about\" element={<About />} />\n          <Route path=\"contact\" element={<Contact />} />\n          <Route path=\"api\" element={<API />} />\n          <Route path='*' element={<NotFound />} />\n        </Routes>\n        <div id=\"adsense\">\n          <Adsense\n            client=\"ca-pub-2143495609871756\"\n            slot=\"7442874197\"\n            style={{ height: 100 }}\n            format=\"\"\n          />\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}