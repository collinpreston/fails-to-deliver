{"version":3,"sources":["components/SearchBar.js","components/CompanyGraph.js","components/logo.svg","components/NavLogo.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","handleOnSelect","item","onSelectCompany","state","data","selection","this","fetchData","fetch","then","res","a","json","setState","catch","error","console","log","items","fuseOptions","keys","autoFocus","onSelect","resultStringKeyName","placeholder","styling","zIndex","React","Component","CompanyGraph","style","width","selectedCompanySymbol","ResponsiveContainer","height","LineChart","selectedCompanyData","syncId","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","type","stroke","fill","AreaChart","Area","Brush","PureComponent","NavLogo","id","className","to","src","Logo","alt","App","graph","dataRetrievedDate","useState","companySymbol","setCompanySymbol","companyData","setCompanyData","graphShown","setGraphShown","companyLastUpdatedOn","setCompanyLastUpdatedOn","moment","format","symbol","companyId","url","newData","settlements","map","settlement_date","data_last_updated","fetchSettlementsForCompany","by","emoji","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6be87032.chunk.js","sourcesContent":["import React from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\n\nclass SearchBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            selection: \"\"\n        }\n      }\n\n    componentDidMount(){\n      this.fetchData();\n    }\n\n    handleOnSelect = (item) =>{\n      this.props.onSelectCompany(item)\n    };\n  \n  \n    fetchData(){\n        const url = '/api/v1/company';\n        fetch(url)\n            .then(async(res) => {\n                const a = await res.json()\n                this.setState({data: a})\n                return a\n            })\n            .catch(error => console.log(error))\n    }\n  \n    render() {\n      return (\n        <ReactSearchAutocomplete\n            items={this.state.data}\n            fuseOptions={{ keys: [\"symbol\", \"name\"] }} // Search on both fields\n            autoFocus\n            onSelect={this.handleOnSelect}\n            resultStringKeyName=\"symbol\" // String to display in the results\n            placeholder={'Search by symbol or name'}\n            styling={{ zIndex: 2 }} // To display it on top of the search box below\n          />\n      );\n    }\n  }\n\nexport default SearchBar;\n","import React, { PureComponent } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Brush,\n  AreaChart,\n  Area,\n  ResponsiveContainer,\n} from 'recharts';\n\nexport default class CompanyGraph extends PureComponent {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%' }}>\n        <h4>{this.props.selectedCompanySymbol}</h4>\n\n        <ResponsiveContainer width=\"100%\" height={200}>\n          <LineChart\n            width={500}\n            height={200}\n            data={this.props.selectedCompanyData}\n            syncId=\"anyId\"\n            margin={{\n              top: 10,\n              right: 30,\n              left: 0,\n              bottom: 0,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"settlement_date\" />\n            <YAxis />\n            <Tooltip />\n            <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n          </LineChart>\n        </ResponsiveContainer>\n        <p>Maybe some other content</p>\n\n        <ResponsiveContainer width=\"100%\" height={200}>\n          <AreaChart\n            width={500}\n            height={200}\n            data={this.props.selectedCompanyData}\n            syncId=\"anyId\"\n            margin={{\n              top: 10,\n              right: 30,\n              left: 0,\n              bottom: 0,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"settlement_date\" />\n            <YAxis />\n            <Tooltip />\n            <Area type=\"monotone\" dataKey=\"quantity\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n            <Brush />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.2414b4b8.svg\";","import React from \"react\";\nimport Logo from \"./logo.svg\";\nimport \"./NavLogo.css\"\n\nconst NavLogo = () => {\n    return (\n      <nav id=\"navbar\">\n        <div className=\"nav-wrapper\">\n          <a\n            to={\"/\"}\n            className=\"left brand-logo\"\n          >\n            <img src={Logo} alt=\"logo\" className=\"photo\" />\n          </a>\n        </div>\n      </nav>\n    );\n}\n\nexport default NavLogo;\n","import React, { useState }  from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport CompanyGraph from './components/CompanyGraph';\nimport moment from 'moment';\nimport NavLogo from './components/NavLogo';\nimport MadeWithLove from 'react-made-with-love';\n\nconst App = () => {\n  const [companySymbol, setCompanySymbol] = useState(\"\");\n  const [companyData, setCompanyData] = useState([]);\n  const [graphShown, setGraphShown] = useState(false);\n  const [companyLastUpdatedOn, setCompanyLastUpdatedOn] = useState(\"\")\n\n  function fetchSettlementsForCompany(companyId) {\n    const url = `/api/v1/company/${companyId}`;\n    fetch(url)\n        .then(async(res) => {\n            const a = await res.json()\n            let newData = a.settlements.map(item => { \n              return {...item, settlement_date: moment(item.settlement_date).format('MMM DD, YYYY')}\n            });\n            setCompanyLastUpdatedOn(a.data_last_updated)\n            setCompanyData(newData)\n            return a\n        })\n        .catch(error => console.log(error))\n  }\n\n  function handleSearchSelection(item) {\n    setCompanySymbol(item.symbol);\n    setGraphShown(true);\n    fetchSettlementsForCompany(item.id)\n  }\n\n  let graph, dataRetrievedDate;\n  if (graphShown) {\n    graph = <CompanyGraph selectedCompanySymbol={companySymbol} selectedCompanyData={companyData}></CompanyGraph>\n    dataRetrievedDate = <p>{\"Data last updated on \" + moment(companyLastUpdatedOn).format('MMM DD, YYYY')}</p>\n  }\n\n  return (\n    <div className=\"App\">\n      <NavLogo/>\n      <div className=\"Title\">Fails-to-Deliver Data</div>\n      <div className=\"SearchBar\">\n        <SearchBar onSelectCompany={handleSearchSelection} style={{width: '50%'}}/>\n      </div>\n      <br/>\n      {graph}\n      {dataRetrievedDate}\n      <footer>\n        <MadeWithLove\n          by=\"Collin\"\n          emoji\n        />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}