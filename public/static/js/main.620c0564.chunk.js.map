{"version":3,"sources":["components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","useQuery","fetch","then","res","json","data","error","isLoading","message","placeholder","value","callback","record","console","log","queryCache","QueryCache","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NA8BeA,EA1BG,WACjB,MAIIC,kBAAS,eAAe,kBAC1BC,MAAM,mBACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,aALjBC,EADF,EACEA,KACAC,EAFF,EAEEA,MAOF,OATA,EAGEC,UAMoB,cAAC,WAAD,yBAElBD,EAAc,eAAC,WAAD,WAAU,2DAAkC,4BAAIA,EAAME,aAGtE,8BACK,cAAC,IAAD,CACIC,YAAa,cAAgBJ,EAC7BK,MAAM,MACNL,KAAM,CAACA,GACPM,SAAU,SAACC,GAAD,OAAYC,QAAQC,IAAIF,SCnBxCG,EAAa,IAAIC,aAURC,EARH,WACV,OACE,cAAC,sBAAD,CAAqBF,WAAYA,EAAjC,SACE,cAAC,EAAD,OCESG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.620c0564.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport useQuery from 'react-query'\nimport ReactSearchBox from \"react-search-box\";\n\nconst SearchBar = () => {\n const {\n   data,\n   error,\n   isLoading\n } = useQuery('profileData', () =>\n   fetch('/api/v1/company')\n   .then(res => res.json())\n )\n\n if (isLoading) return <Fragment>Loading...</Fragment>\n\n if (error) return <Fragment><h1>Oops something went wrong</h1><p>{error.message}</p></Fragment>\n\n return (\n   <div>\n        <ReactSearchBox\n            placeholder={\"Placeholder\" + data}\n            value=\"Doe\"\n            data={[data]}\n            callback={(record) => console.log(record)}\n        />\n   </div>\n )\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport { QueryCache, QueryClientProvider } from 'react-query';\n\nconst queryCache = new QueryCache()\n\nconst App = () => {\n  return (\n    <QueryClientProvider queryCache={queryCache}>\n      <SearchBar/>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}