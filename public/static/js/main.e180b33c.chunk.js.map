{"version":3,"sources":["components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["queryClient","QueryClient","SearchBar","props","useState","searchTerm","useQuery","status","fetch","data","client","placeholder","value","callback","record","console","log","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAIMA,EAAc,IAAIC,cA2BTC,MAzBf,SAAmBC,GACf,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAEF,GAFE,KAEuBC,mBACvB,CAAC,QAAS,CAAEC,OAAQ,SAAUF,gBAC9B,SAACE,EAAQF,GACP,OAAOG,MAAM,qBAHDC,GAAhB,EAAQF,OAAR,EAAgBE,MAQd,OACA,8BACQ,cAAC,sBAAD,CAAqBC,OAAQV,EAA7B,SACI,cAAC,IAAD,CACIW,YAAa,cAAgBF,EAC7BG,MAAM,MACNH,KAAMJ,EACNQ,SAAU,SAACC,GAAD,OAAYC,QAAQC,IAAIF,WCZvCG,EARH,WACV,OACA,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e180b33c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query'\nimport ReactSearchBox from \"react-search-box\";\n\nconst queryClient = new QueryClient()\n\nfunction SearchBar(props) {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const { status, data } = useQuery(\n    [\"users\", { status: \"active\", searchTerm }],\n    (status, searchTerm) => {\n      return fetch('/api/v1/tests')\n    }\n  );\n\n\n    return (\n    <div>\n            <QueryClientProvider client={queryClient}>\n                <ReactSearchBox\n                    placeholder={\"Placeholder\" + data}\n                    value=\"Doe\"\n                    data={searchTerm}\n                    callback={(record) => console.log(record)}\n                />\n            </QueryClientProvider>\n    </div>\n    )\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\n\nconst App = () => {\n  return (\n  <div className=\"App\">\n    <SearchBar/>\n  </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}