{"ast":null,"code":"import _objectSpread from\"/Users/collinpreston/Documents/GitHub/fails-to-deliver/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/collinpreston/Documents/GitHub/fails-to-deliver/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import'./Contact.css';import{Form,Button}from'react-bootstrap';import DocumentMeta from'react-document-meta';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Contact(){var meta={title:'Contact',description:'Contact form failsdata.com',canonical:'http://failsdata.com/contact',meta:{charset:'utf-8',name:{keywords:'contact,stocks,fails,SEC,deliver'}}};var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),formSubmitted=_useState6[0],setFormSubmitted=_useState6[1];var requestOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({inquiry:{message:message},email:{email:email}})};function handleChange(e){switch(e.target.name){case\"message\":setMessage(e.target.value);return;case\"email\":setEmail(e.target.value);return;}}function handleSubmit(event){setFormSubmitted(true);fetch('/api/v1/inquiry',requestOptions).then(function(response){return response.json();});// TODO, send request to Ruby endpoint that will ultimately send the email\n}var form;if(formSubmitted){form=/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Thanks for your inquiry, you will hear from us soon.\"})})});}else{form=/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Feel free to reach out with any questions or suggestions.\"})}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email address\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"email\",type:\"email\",placeholder:\"name@example.com\",onChange:handleChange})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlTextarea1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Inquiry\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"message\",as:\"textarea\",rows:3,onChange:handleChange})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Submit\"})]})]});}return/*#__PURE__*/_jsx(DocumentMeta,_objectSpread(_objectSpread({},meta),{},{children:/*#__PURE__*/_jsxs(\"div\",{id:\"form\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Contact\"}),form]})}));}export default Contact;","map":{"version":3,"sources":["/Users/collinpreston/Documents/GitHub/fails-to-deliver/client/src/components/Contact.js"],"names":["useState","Form","Button","DocumentMeta","Contact","meta","title","description","canonical","charset","name","keywords","email","setEmail","message","setMessage","formSubmitted","setFormSubmitted","requestOptions","method","headers","body","JSON","stringify","inquiry","handleChange","e","target","value","handleSubmit","event","fetch","then","response","json","form"],"mappings":"qSAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAO,eAAP,CACA,OAASC,IAAT,CAAeC,MAAf,KAA6B,iBAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,C,wFAEA,QAASC,CAAAA,OAAT,EAAmB,CACf,GAAMC,CAAAA,IAAI,CAAG,CACTC,KAAK,CAAE,SADE,CAETC,WAAW,CAAE,4BAFJ,CAGTC,SAAS,CAAE,8BAHF,CAITH,IAAI,CAAE,CACFI,OAAO,CAAE,OADP,CAEFC,IAAI,CAAE,CACFC,QAAQ,CAAE,kCADR,CAFJ,CAJG,CAAb,CAYA,cAA0BX,QAAQ,CAAC,EAAD,CAAlC,wCAAOY,KAAP,eAAcC,QAAd,eACA,eAA8Bb,QAAQ,CAAC,EAAD,CAAtC,yCAAOc,OAAP,eAAgBC,UAAhB,eACA,eAA0Cf,QAAQ,CAAC,KAAD,CAAlD,yCAAOgB,aAAP,eAAsBC,gBAAtB,eACA,GAAMC,CAAAA,cAAc,CAAG,CACnBC,MAAM,CAAE,MADW,CAEnBC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFU,CAGnBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEC,OAAO,CAAE,CAAEV,OAAO,CAAPA,OAAF,CAAX,CAAwBF,KAAK,CAAE,CAAEA,KAAK,CAALA,KAAF,CAA/B,CAAf,CAHa,CAAvB,CAMA,QAASa,CAAAA,YAAT,CAAsBC,CAAtB,CAAyB,CACrB,OAAQA,CAAC,CAACC,MAAF,CAASjB,IAAjB,EACI,IAAK,SAAL,CACIK,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV,CACA,OACJ,IAAK,OAAL,CACIf,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CACA,OANR,CAQH,CAED,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CACzBb,gBAAgB,CAAC,IAAD,CAAhB,CAEAc,KAAK,CAAC,iBAAD,CAAoBb,cAApB,CAAL,CACKc,IADL,CACU,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADlB,EAEA;AACH,CAED,GAAIC,CAAAA,IAAJ,CACA,GAAInB,aAAJ,CAAmB,CACfmB,IAAI,cACA,kCACI,gCAAG,2EAAH,EADJ,EADJ,CAIH,CALD,IAKO,CACHA,IAAI,cACA,oCACI,gCAAG,gFAAH,EADJ,cAEI,MAAC,IAAD,EAAM,QAAQ,CAAEN,YAAhB,wBACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,CAA6B,SAAS,CAAC,2BAAvC,wBACI,KAAC,IAAD,CAAM,KAAN,4BADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,OAAnB,CAA2B,IAAI,CAAC,OAAhC,CAAwC,WAAW,CAAC,kBAApD,CAAuE,QAAQ,CAAEJ,YAAjF,EAFJ,GADJ,cAKI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,CAA6B,SAAS,CAAC,8BAAvC,wBACI,KAAC,IAAD,CAAM,KAAN,sBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,SAAnB,CAA6B,EAAE,CAAC,UAAhC,CAA2C,IAAI,CAAE,CAAjD,CAAoD,QAAQ,CAAEA,YAA9D,EAFJ,GALJ,cASI,KAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,IAAI,CAAC,QAA/B,oBATJ,GAFJ,GADJ,CAiBH,CAED,mBACI,KAAC,YAAD,gCAAkBpB,IAAlB,4BACI,aAAK,EAAE,CAAC,MAAR,wBACI,+BADJ,CAEK8B,IAFL,GADJ,GADJ,CAQH,CACD,cAAe/B,CAAAA,OAAf","sourcesContent":["import { useState } from 'react';\nimport './Contact.css'\nimport { Form, Button } from 'react-bootstrap'\nimport DocumentMeta from 'react-document-meta';\n\nfunction Contact() {\n    const meta = {\n        title: 'Contact',\n        description: 'Contact form failsdata.com',\n        canonical: 'http://failsdata.com/contact',\n        meta: {\n            charset: 'utf-8',\n            name: {\n                keywords: 'contact,stocks,fails,SEC,deliver'\n            }\n        }\n    };\n\n    const [email, setEmail] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [formSubmitted, setFormSubmitted] = useState(false);\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ inquiry: { message }, email: { email } })\n    };\n\n    function handleChange(e) {\n        switch (e.target.name) {\n            case \"message\":\n                setMessage(e.target.value);\n                return;\n            case \"email\":\n                setEmail(e.target.value);\n                return;\n        }\n    }\n\n    function handleSubmit(event) {\n        setFormSubmitted(true)\n\n        fetch('/api/v1/inquiry', requestOptions)\n            .then(response => response.json());\n        // TODO, send request to Ruby endpoint that will ultimately send the email\n    }\n\n    let form;\n    if (formSubmitted) {\n        form =\n            <div>\n                <p><b>Thanks for your inquiry, you will hear from us soon.</b></p>\n            </div>\n    } else {\n        form =\n            <div>\n                <p><b>Feel free to reach out with any questions or suggestions.</b></p>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control name=\"email\" type=\"email\" placeholder=\"name@example.com\" onChange={handleChange} />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Inquiry</Form.Label>\n                        <Form.Control name=\"message\" as=\"textarea\" rows={3} onChange={handleChange} />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n    }\n\n    return (\n        <DocumentMeta {...meta}>\n            <div id=\"form\">\n                <h1>Contact</h1>\n                {form}\n            </div>\n        </DocumentMeta>\n    )\n}\nexport default Contact\n"]},"metadata":{},"sourceType":"module"}