{"ast":null,"code":"var _jsxFileName = \"/Users/collinpreston/Documents/GitHub/fails-to-deliver/client/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Home.css';\nimport SearchBar from './SearchBar';\nimport CompanyGraph from './CompanyGraph';\nimport moment from 'moment';\nimport NavLogo from './NavLogo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [companySymbol, setCompanySymbol] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [companyData, setCompanyData] = useState([]);\n  const [graphShown, setGraphShown] = useState(false);\n  const [companyLastUpdatedOn, setCompanyLastUpdatedOn] = useState(\"\");\n\n  function fetchSettlementsForCompany(companyId) {\n    const url = `/api/v1/company/${companyId}`;\n    fetch(url).then(async res => {\n      const a = await res.json();\n      let newData = a.settlements.map(item => {\n        return { ...item,\n          settlement_date: moment(item.settlement_date).format('MMM DD, YYYY')\n        };\n      });\n      setCompanyLastUpdatedOn(a.data_last_updated);\n      setCompanyData(newData);\n      return a;\n    }).catch(error => console.log(error));\n  }\n\n  function handleSearchSelection(item) {\n    setCompanySymbol(item.symbol);\n    console.log(item);\n    setCompanyName(item.name);\n    setGraphShown(true);\n    fetchSettlementsForCompany(item.id);\n  }\n\n  function resetHomePage() {\n    setGraphShown(false);\n  }\n\n  let graph, dataRetrievedDate;\n\n  if (graphShown) {\n    graph = /*#__PURE__*/_jsxDEV(CompanyGraph, {\n      selectedCompanyName: companyName,\n      selectedCompanySymbol: companySymbol,\n      selectedCompanyData: companyData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n    dataRetrievedDate = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Data last updated on \" + moment(companyLastUpdatedOn).format('MMM DD, YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(NavLogo, {\n      customClickEvent: resetHomePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      onClick: resetHomePage,\n      children: \"Fails-to-Deliver Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar\",\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSelectCompany: handleSearchSelection,\n        style: {\n          width: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), graph, dataRetrievedDate]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"HjIkHqZrgSnsDADzzWgtKVPehnU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/collinpreston/Documents/GitHub/fails-to-deliver/client/src/components/Home.js"],"names":["React","useState","SearchBar","CompanyGraph","moment","NavLogo","Home","companySymbol","setCompanySymbol","companyName","setCompanyName","companyData","setCompanyData","graphShown","setGraphShown","companyLastUpdatedOn","setCompanyLastUpdatedOn","fetchSettlementsForCompany","companyId","url","fetch","then","res","a","json","newData","settlements","map","item","settlement_date","format","data_last_updated","catch","error","console","log","handleSearchSelection","symbol","name","id","resetHomePage","graph","dataRetrievedDate","width"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react';\nimport './Home.css';\nimport SearchBar from './SearchBar';\nimport CompanyGraph from './CompanyGraph';\nimport moment from 'moment';\nimport NavLogo from './NavLogo';\n\nconst Home = () => {\n  const [companySymbol, setCompanySymbol] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [companyData, setCompanyData] = useState([]);\n  const [graphShown, setGraphShown] = useState(false);\n  const [companyLastUpdatedOn, setCompanyLastUpdatedOn] = useState(\"\");\n\n  function fetchSettlementsForCompany(companyId) {\n    const url = `/api/v1/company/${companyId}`;\n    fetch(url)\n        .then(async(res) => {\n            const a = await res.json()\n            let newData = a.settlements.map(item => { \n              return {...item, settlement_date: moment(item.settlement_date).format('MMM DD, YYYY')}\n            });\n            setCompanyLastUpdatedOn(a.data_last_updated)\n            setCompanyData(newData)\n            return a\n        })\n        .catch(error => console.log(error))\n  }\n\n  function handleSearchSelection(item) {\n    setCompanySymbol(item.symbol);\n    console.log(item)\n    setCompanyName(item.name);\n    setGraphShown(true);\n    fetchSettlementsForCompany(item.id)\n  }\n\n  function resetHomePage() {\n    setGraphShown(false);\n  }\n\n  let graph, dataRetrievedDate;\n  if (graphShown) {\n    graph = <CompanyGraph selectedCompanyName={companyName} selectedCompanySymbol={companySymbol} selectedCompanyData={companyData}></CompanyGraph>\n    dataRetrievedDate = <p>{\"Data last updated on \" + moment(companyLastUpdatedOn).format('MMM DD, YYYY')}</p>\n  }\n\n  return (\n    <div className=\"Home\">\n      <NavLogo customClickEvent={resetHomePage}></NavLogo>\n      <div className=\"Title\" onClick={resetHomePage}>Fails-to-Deliver Data</div>\n      <div className=\"SearchBar\">\n        <SearchBar onSelectCompany={handleSearchSelection} style={{width: '50%'}}/>\n      </div>\n      <br/>\n      {graph}\n      {dataRetrievedDate}\n    </div>\n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}