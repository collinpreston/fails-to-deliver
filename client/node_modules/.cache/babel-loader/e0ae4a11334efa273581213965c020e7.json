{"ast":null,"code":"import _regeneratorRuntime from\"/Users/collinpreston/Documents/GitHub/fails-to-deliver/client/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/collinpreston/Documents/GitHub/fails-to-deliver/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/collinpreston/Documents/GitHub/fails-to-deliver/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/collinpreston/Documents/GitHub/fails-to-deliver/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./Home.css';import SearchBar from'./SearchBar';import CompanyGraph from'./CompanyGraph';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Home=function Home(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),companySymbol=_useState2[0],setCompanySymbol=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),companyName=_useState4[0],setCompanyName=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),companyData=_useState6[0],setCompanyData=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),graphShown=_useState8[0],setGraphShown=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),companyLastUpdatedOn=_useState10[0],setCompanyLastUpdatedOn=_useState10[1];function fetchSettlementsForCompany(companyId){var url=\"/api/v1/company/\".concat(companyId);fetch(url).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res){var a,newData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return res.json();case 2:a=_context.sent;newData=a.settlements.map(function(item){return _objectSpread(_objectSpread({},item),{},{settlement_date:moment(item.settlement_date).format('MMM DD, YYYY')});});setCompanyLastUpdatedOn(a.data_last_updated);setCompanyData(newData);return _context.abrupt(\"return\",a);case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()).catch(function(error){return console.log(error);});}function handleSearchSelection(item){setCompanySymbol(item.symbol);console.log(item);setCompanyName(item.name);setGraphShown(true);fetchSettlementsForCompany(item.id);}function resetHomePage(){setGraphShown(false);}var graph,dataRetrievedDate;if(graphShown){graph=/*#__PURE__*/_jsx(CompanyGraph,{selectedCompanyName:companyName,selectedCompanySymbol:companySymbol,selectedCompanyData:companyData});dataRetrievedDate=/*#__PURE__*/_jsx(\"p\",{children:\"Data last updated on \"+moment(companyLastUpdatedOn).format('MMM DD, YYYY')});}return/*#__PURE__*/_jsxs(\"div\",{className:\"Home\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Title\",onClick:resetHomePage,children:\"Fails-to-Deliver Data\"}),/*#__PURE__*/_jsx(\"div\",{className:\"SearchBar\",children:/*#__PURE__*/_jsx(SearchBar,{onSelectCompany:handleSearchSelection,onClearSearch:resetHomePage,style:{width:'50%'}})}),/*#__PURE__*/_jsx(\"br\",{}),graph,dataRetrievedDate]});};export default Home;","map":{"version":3,"sources":["/Users/collinpreston/Documents/GitHub/fails-to-deliver/client/src/components/Home.js"],"names":["React","useState","SearchBar","CompanyGraph","moment","Home","companySymbol","setCompanySymbol","companyName","setCompanyName","companyData","setCompanyData","graphShown","setGraphShown","companyLastUpdatedOn","setCompanyLastUpdatedOn","fetchSettlementsForCompany","companyId","url","fetch","then","res","json","a","newData","settlements","map","item","settlement_date","format","data_last_updated","catch","error","console","log","handleSearchSelection","symbol","name","id","resetHomePage","graph","dataRetrievedDate","width"],"mappings":"4jBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAiC,OAAjC,CACA,MAAO,YAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,cAA0CJ,QAAQ,CAAC,EAAD,CAAlD,wCAAOK,aAAP,eAAsBC,gBAAtB,eACA,eAAsCN,QAAQ,CAAC,EAAD,CAA9C,yCAAOO,WAAP,eAAoBC,cAApB,eACA,eAAsCR,QAAQ,CAAC,EAAD,CAA9C,yCAAOS,WAAP,eAAoBC,cAApB,eACA,eAAoCV,QAAQ,CAAC,KAAD,CAA5C,yCAAOW,UAAP,eAAmBC,aAAnB,eACA,eAAwDZ,QAAQ,CAAC,EAAD,CAAhE,0CAAOa,oBAAP,gBAA6BC,uBAA7B,gBAEA,QAASC,CAAAA,0BAAT,CAAoCC,SAApC,CAA+C,CAC7C,GAAMC,CAAAA,GAAG,2BAAsBD,SAAtB,CAAT,CACAE,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,0FACU,iBAAMC,GAAN,sJACcA,CAAAA,GAAG,CAACC,IAAJ,EADd,QACIC,CADJ,eAEEC,OAFF,CAEYD,CAAC,CAACE,WAAF,CAAcC,GAAd,CAAkB,SAAAC,IAAI,CAAI,CACtC,sCAAWA,IAAX,MAAiBC,eAAe,CAAExB,MAAM,CAACuB,IAAI,CAACC,eAAN,CAAN,CAA6BC,MAA7B,CAAoC,cAApC,CAAlC,GACD,CAFa,CAFZ,CAKFd,uBAAuB,CAACQ,CAAC,CAACO,iBAAH,CAAvB,CACAnB,cAAc,CAACa,OAAD,CAAd,CANE,gCAOKD,CAPL,wDADV,gEAUKQ,KAVL,CAUW,SAAAC,KAAK,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ,EAVhB,EAWD,CAED,QAASG,CAAAA,qBAAT,CAA+BR,IAA/B,CAAqC,CACnCpB,gBAAgB,CAACoB,IAAI,CAACS,MAAN,CAAhB,CACAH,OAAO,CAACC,GAAR,CAAYP,IAAZ,EACAlB,cAAc,CAACkB,IAAI,CAACU,IAAN,CAAd,CACAxB,aAAa,CAAC,IAAD,CAAb,CACAG,0BAA0B,CAACW,IAAI,CAACW,EAAN,CAA1B,CACD,CAED,QAASC,CAAAA,aAAT,EAAyB,CACvB1B,aAAa,CAAC,KAAD,CAAb,CACD,CAED,GAAI2B,CAAAA,KAAJ,CAAWC,iBAAX,CACA,GAAI7B,UAAJ,CAAgB,CACd4B,KAAK,cAAG,KAAC,YAAD,EAAc,mBAAmB,CAAEhC,WAAnC,CAAgD,qBAAqB,CAAEF,aAAvE,CAAsF,mBAAmB,CAAEI,WAA3G,EAAR,CACA+B,iBAAiB,cAAG,mBAAI,wBAA0BrC,MAAM,CAACU,oBAAD,CAAN,CAA6Be,MAA7B,CAAoC,cAApC,CAA9B,EAApB,CACD,CAED,mBACE,aAAK,SAAS,CAAC,MAAf,wBACE,YAAK,SAAS,CAAC,OAAf,CAAuB,OAAO,CAAEU,aAAhC,mCADF,cAEE,YAAK,SAAS,CAAC,WAAf,uBACE,KAAC,SAAD,EAAW,eAAe,CAAEJ,qBAA5B,CAAmD,aAAa,CAAEI,aAAlE,CAAiF,KAAK,CAAE,CAACG,KAAK,CAAE,KAAR,CAAxF,EADF,EAFF,cAKE,aALF,CAMGF,KANH,CAOGC,iBAPH,GADF,CAWD,CAnDD,CAqDA,cAAepC,CAAAA,IAAf","sourcesContent":["import React, { useState }  from 'react';\nimport './Home.css';\nimport SearchBar from './SearchBar';\nimport CompanyGraph from './CompanyGraph';\nimport moment from 'moment';\n\nconst Home = () => {\n  const [companySymbol, setCompanySymbol] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [companyData, setCompanyData] = useState([]);\n  const [graphShown, setGraphShown] = useState(false);\n  const [companyLastUpdatedOn, setCompanyLastUpdatedOn] = useState(\"\");\n\n  function fetchSettlementsForCompany(companyId) {\n    const url = `/api/v1/company/${companyId}`;\n    fetch(url)\n        .then(async(res) => {\n            const a = await res.json()\n            let newData = a.settlements.map(item => { \n              return {...item, settlement_date: moment(item.settlement_date).format('MMM DD, YYYY')}\n            });\n            setCompanyLastUpdatedOn(a.data_last_updated)\n            setCompanyData(newData)\n            return a\n        })\n        .catch(error => console.log(error))\n  }\n\n  function handleSearchSelection(item) {\n    setCompanySymbol(item.symbol);\n    console.log(item)\n    setCompanyName(item.name);\n    setGraphShown(true);\n    fetchSettlementsForCompany(item.id)\n  }\n\n  function resetHomePage() {\n    setGraphShown(false);\n  }\n\n  let graph, dataRetrievedDate;\n  if (graphShown) {\n    graph = <CompanyGraph selectedCompanyName={companyName} selectedCompanySymbol={companySymbol} selectedCompanyData={companyData}></CompanyGraph>\n    dataRetrievedDate = <p>{\"Data last updated on \" + moment(companyLastUpdatedOn).format('MMM DD, YYYY')}</p>\n  }\n\n  return (\n    <div className=\"Home\">\n      <div className=\"Title\" onClick={resetHomePage}>Fails-to-Deliver Data</div>\n      <div className=\"SearchBar\">\n        <SearchBar onSelectCompany={handleSearchSelection} onClearSearch={resetHomePage} style={{width: '50%'}}/>\n      </div>\n      <br/>\n      {graph}\n      {dataRetrievedDate}\n    </div>\n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}