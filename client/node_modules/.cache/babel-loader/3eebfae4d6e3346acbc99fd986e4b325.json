{"ast":null,"code":"var _jsxFileName = \"/Users/collinpreston/Documents/GitHub/fails-to-deliver/client/src/components/SearchBar.js\";\nimport React from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnSelect = item => {\n      this.props.onSelectCompany(item);\n    };\n\n    this.handleOnClear = () => {\n      this.props.onClearSearch();\n    };\n\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    const url = '/api/v1/company';\n    fetch(url).then(async res => {\n      const a = await res.json();\n      this.setState({\n        data: a\n      });\n      return a;\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ReactSearchAutocomplete, {\n      items: this.state.data,\n      fuseOptions: {\n        keys: [\"symbol\", \"name\"]\n      } // Search on both fields\n      ,\n      autoFocus: true,\n      onSelect: this.handleOnSelect,\n      onClear: this.handleOnClear,\n      resultStringKeyName: \"symbol\" // String to display in the results\n      ,\n      placeholder: 'Search by symbol or name',\n      styling: {\n        zIndex: 2\n      } // To display it on top of the search box below\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/collinpreston/Documents/GitHub/fails-to-deliver/client/src/components/SearchBar.js"],"names":["React","ReactSearchAutocomplete","SearchBar","Component","constructor","props","handleOnSelect","item","onSelectCompany","handleOnClear","onClearSearch","state","data","componentDidMount","fetchData","url","fetch","then","res","a","json","setState","catch","error","console","log","render","keys","zIndex"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,QAAwC,2BAAxC;;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,cAXmB,GAWDC,IAAD,IAAS;AACxB,WAAKF,KAAL,CAAWG,eAAX,CAA2BD,IAA3B;AACD,KAbkB;;AAAA,SAenBE,aAfmB,GAeH,MAAK;AACnB,WAAKJ,KAAL,CAAWK,aAAX;AACD,KAjBkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGD;;AAEHC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,SAAL;AACD;;AAWDA,EAAAA,SAAS,GAAE;AACP,UAAMC,GAAG,GAAG,iBAAZ;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,MAAMC,GAAN,IAAc;AAChB,YAAMC,CAAC,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAhB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,IAAI,EAAEO;AAAP,OAAd;AACA,aAAOA,CAAP;AACH,KALL,EAMKG,KANL,CAMWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CANpB;AAOH;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,uBAAD;AACI,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,IADtB;AAEI,MAAA,WAAW,EAAE;AAAEe,QAAAA,IAAI,EAAE,CAAC,QAAD,EAAW,MAAX;AAAR,OAFjB,CAE+C;AAF/C;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,QAAQ,EAAE,KAAKrB,cAJnB;AAKI,MAAA,OAAO,EAAE,KAAKG,aALlB;AAMI,MAAA,mBAAmB,EAAC,QANxB,CAMiC;AANjC;AAOI,MAAA,WAAW,EAAE,0BAPjB;AAQI,MAAA,OAAO,EAAE;AAAEmB,QAAAA,MAAM,EAAE;AAAV,OARb,CAQ4B;;AAR5B;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA9CmC;;AAiDxC,eAAe1B,SAAf","sourcesContent":["import React from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\n\nclass SearchBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        }\n      }\n\n    componentDidMount(){\n      this.fetchData();\n    }\n\n    handleOnSelect = (item) =>{\n      this.props.onSelectCompany(item)\n    };\n\n    handleOnClear = () =>{\n      this.props.onClearSearch()\n    }\n  \n  \n    fetchData(){\n        const url = '/api/v1/company';\n        fetch(url)\n            .then(async(res) => {\n                const a = await res.json()\n                this.setState({data: a})\n                return a\n            })\n            .catch(error => console.log(error))\n    }\n  \n    render() {\n      return (\n        <ReactSearchAutocomplete\n            items={this.state.data}\n            fuseOptions={{ keys: [\"symbol\", \"name\"] }} // Search on both fields\n            autoFocus\n            onSelect={this.handleOnSelect}\n            onClear={this.handleOnClear}\n            resultStringKeyName=\"symbol\" // String to display in the results\n            placeholder={'Search by symbol or name'}\n            styling={{ zIndex: 2 }} // To display it on top of the search box below\n          />\n      );\n    }\n  }\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}